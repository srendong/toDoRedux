{"version":3,"sources":["Redux/reducers/notes.js","Redux/reducers/favorites.js","Redux/store.js","Components/Note/Note.js","Redux/actions/AddNote.js","Components/Form/Form.js","Redux/actions/RemoveNote.js","Redux/actions/AddToFavorites.js","Redux/actions/EditNote.js","Redux/actions/ChangeText.js","Components/Notes/Notes.js","Components/Details/Details.js","Components/Favorites/Favorites.js","index.js"],"names":["defaultState","noteId","Date","valueOf","noteContent","location","favorite","editingMode","done","reducer","state","type","payload","concat","filter","note","map","editMode","id","e","target","name","value","title","combineReducers","notes","favorites","createStore","Note","props","className","onChange","handlerChange","onClick","changeFavorites","hanldeRemove","changeEditMode","to","AddNote","data","Form","handleSubmit","preventDefault","length","dispatch","alert","setState","HandleChange","onSubmit","this","placeholder","Component","connect","RemoveNote","AddToFavorites","EditNote","ChangeText","key","withRouter","parseInt","match","params","itemId","find","n","Root","store","path","component","Notes","Details","Favorites","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53d5a199.chunk.js","sourcesContent":["const defaultState = [\n  {\n    noteId: new Date().valueOf(),\n    noteContent: \"ejemplo\",\n    location: \"medellin\",\n    favorite: true,\n    editingMode: false,\n    done: false\n  }\n];\n\nconst reducer = (state = defaultState, { type, payload }) => {\n  switch (type) {\n    case \"AddNote\":\n      return state.concat(payload);\n\n    case \"RemoveNote\":\n      return state.filter(note => note.noteId !== payload);\n\n    case \"AddToFavorites\":\n      return state.map(note =>\n        note.noteId === payload ? { ...note, favorite: !note.favorite } : note\n      );\n\n    case \"EditNote\":\n      return state.map(note =>\n        note.noteId === payload ? { ...note, editMode: !note.editMode } : note\n      );\n\n    case \"ChangeText\":\n      return state.map(note =>\n        note.noteId === payload.id\n          ? { ...note, [payload.e.target.name]: payload.e.target.value }\n          : note\n      );\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n\n//reducer siemprerecibe como parametros el estado y la accion\n// const reducer = (state, action}) => {\n//   switch (action.type) {\n\n//     case \"xxxxx\":\n//       return state.concat(action.payload);\n\n//   default:\n//     return state;\n\n// };","const defaultState = []\n\nconst reducer = (state = defaultState, { type , payload })=>{\n    switch(type){\n        case 'AddToFavorites':{\n            return[\n                ...state,\n                {id: 2,\n                title: \"hola\"}\n            ]\n        }\n        default:\n            return state\n    }\n}\n\nexport default reducer;","import { createStore, combineReducers } from \"redux\";\nimport notes from \"./reducers/notes\";\nimport favorites from \"./reducers/favorites\"\n\nconst reducer = combineReducers({\n  notes,\n  favorites\n})\n\n\nexport default createStore(reducer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Note = props => {\n  //classNames\n  const favorite = \"material-icons col-2 favorite mr-3\";\n  const noFavorite = \"material-icons col-2 noFavorite mr-3\";\n  const edit = \"material-icons col-2 edit mr-3\";\n  const noEdit = \"material-icons col-2 noEdit mr-3\";\n  const remove = \"material-icons col-2 remove\";\n  const detail = \"material-icons col-2 detail\"\n  \n\n  return (\n    <div className=\"note row container  d-flex justify-content-between mb-3 mt-2 align-items-center\">\n      {props.note.editMode ? (\n        <div className=\"col-8 \">\n          <p>\n            <input\n              className=\"inputChange noteContentEdit mr-3\"\n              type=\"text\"\n              name=\"noteContent\"\n              value={props.note.noteContent}\n              onChange={props.handlerChange}\n            />\n            en\n            <input\n              className=\"inputChange locationEdit ml-3\"\n              type=\"text\"\n              name=\"location\"\n              value={props.note.location}\n              onChange={props.handlerChange}\n            />\n          </p>\n        </div>\n      ) : (\n        <div className=\"col-8 \">\n          <p className=\"\">\n            <span className=\"noteText1 mr-3\">{props.note.noteContent}</span>en\n            <span className=\"noteText2 ml-3\">{props.note.location}</span>\n          </p>\n        </div>\n      )}\n      <div className=\"col-4 \">\n        <i\n          className={props.note.favorite ? favorite : noFavorite}\n          onClick={props.changeFavorites}\n        >\n          favorite\n        </i>\n        <i className={remove} onClick={props.hanldeRemove}>\n          delete\n        </i>\n{props.note.editMode ? <i\n          className={edit}\n          onClick={props.changeEditMode}\n        > save </i>: <i\n          className={noEdit}\n          onClick={props.changeEditMode}\n        > edit </i>}\n        <Link to={`/details/${props.note.noteId}`}>\n          <i className={detail}>location_searching</i>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Note;\n","export const type = \"AddNote\"\n\nconst AddNote = data =>{\n    return {\n        type,\n        payload: data\n    }\n}\n\nexport default AddNote;","import React, { Component } from \"react\";\nimport AddNote from \"../../Redux/actions/AddNote\";\nimport { connect } from \"react-redux\";\n\nclass Form extends Component {\n  state = {\n    noteContent: \"\",\n    location: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const noteContent = this.state.noteContent;\n    const location = this.state.location;\n\n    const data = {\n      noteId: new Date().valueOf(),\n      noteContent,\n      location,\n      favorite: false,\n      editMode: false,\n      done: false\n    };\n    if (this.state.location.length > 0 && this.state.noteContent.length > 0) {\n      this.props.dispatch(AddNote(data));\n    } else if (this.state.noteContent.length === 0) {\n      alert(\"Please enter your note content\");\n    } else if (this.state.location.length === 0) {\n      alert(\"Please enter a location\");\n    }\n    this.setState({\n      noteContent: \"\",\n      location: \"\"\n    });\n  };\n\n  HandleChange = e => {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\" container-fluid  form \">\n        <div className=\"row justify-content-center  \">\n          <form className=\"\" onSubmit={this.handleSubmit}>\n            <input\n              className=\"noteContent m-3 p-1\"\n              type=\"text\"\n              name=\"noteContent\"\n              placeholder=\"write your note\"\n              value={this.state.noteContent}\n              onChange={this.HandleChange}\n            />\n            <input\n              className=\"location m-3 p-1\"\n              type=\"text\"\n              name=\"location\"\n              placeholder=\"location\"\n              value={this.state.location}\n              onChange={this.HandleChange}\n            />\n            <button type=\"submit\" className=\"done \">\n              <i className=\"material-icons chulo \">done</i>\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Form);\n","export const type= \"RemoveNote\"\n\nconst RemoveNote = id => {\n    return {\n        type,\n        payload: id\n    }\n}\nexport default RemoveNote;","export const type = \"AddToFavorites\";\n\nconst AddToFavorites = id => {\n  return {\n    type,\n    payload: id\n  };\n};\n\nexport default AddToFavorites;\n","export const type = \"EditNote\";\n\nconst EditNote = id => {\n  return { type, payload: id };\n};\n\nexport default EditNote;\n","export const type = \"ChangeText\";\n\nconst ChangeText = (id, e) => {\n  return { \n    type,\n    payload: { id, e } };\n};\n\nexport default ChangeText;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Note from \"../Note/Note\";\nimport Form from \"../Form/Form\";\nimport RemoveNote from \"../../Redux/actions/RemoveNote\";\nimport AddToFavorites from \"../../Redux/actions/AddToFavorites\";\nimport EditNote from \"../../Redux/actions/EditNote\";\nimport ChangeText from \"../../Redux/actions/ChangeText\";\nimport { Link } from \"react-router-dom\";\n\nconst Notes = props => {\n  const hanldeRemove = id => {\n    props.dispatch(RemoveNote(id));\n  };\n\n  const changeFavorites = id => {\n    props.dispatch(AddToFavorites(id));\n  };\n\n  const changeEditMode = id => {\n    props.dispatch(EditNote(id));\n  };\n\n  const handlerChange = (id, e) => {\n    props.dispatch(ChangeText(id, e));\n  };\n\n  return (\n    <div className=\"notesContainer\">\n      <div className=\"notesHeader\">\n        <h1>Notes firebase</h1>\n      </div>\n      <div>\n        <Form />\n      </div>\n      <div className=\"row justify-content-center \">\n        <Link to=\"/favorites\">\n          <div className=\"row\">\n            <p className=\"subtitle\">go to Favorites  </p><i className=\"material-icons goFavorites\">favorite</i>\n            \n          </div>\n        </Link>\n      </div>\n      <div className=\"notesBody row justify-content-center\">\n        {props.notes.map(note => (\n          <Note\n            key={note.noteId}\n            note={note}\n            hanldeRemove={() => hanldeRemove(note.noteId)}\n            changeFavorites={() => changeFavorites(note.noteId)}\n            changeEditMode={() => changeEditMode(note.noteId)}\n            handlerChange={e => handlerChange(note.noteId, e)}\n          />\n        ))}\n      </div>\n      <div className=\"notesFooter\" />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    notes: state.notes\n  };\n};\n\nexport default connect(mapStateToProps)(Notes);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter , Link } from \"react-router-dom\";\n\nconst Details = props => {\n  const id = parseInt(props.match.params.itemId);\n  const note = props.notes.find(n=> n.noteId === id);\n  return (\n    <div>\n      <p>hola{`${note.noteId}`}</p>  \n      <Link to=\"/\"> <button>Back</button> </Link>\n     \n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    notes: state.notes\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Details));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {Link} from \"react-router-dom\"\nimport AddToFavorites from \"../../Redux/actions/AddToFavorites\";\n\nconst Favorites = props => {\n\n  const RemoveFavorites =(id)=>{\n    props.dispatch(AddToFavorites(id))\n  }\n  return (\n    <div className=\"container favorites \">\n    <div className=\"row justify-content-center p-5\">\n      <h2 className=\"title\">Favorites</h2>\n    </div>\n    <div className=\"row justify-content-center p-5\">\n      <Link to=\"/\" ><button>Home</button></Link>\n    </div>\n      {props.notes.map(note =>\n        note.favorite === true ? (\n          <div className=\"row justify-content-center border col-12 mb-4 d-flex justify-content-between\" key={note.noteId}>\n          <h2 className=\"noteContent\">{note.noteContent}</h2>\n          <button onClick={()=>RemoveFavorites(note.noteId)}>Remove from favorites</button>\n          </div>\n        ) : null\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    notes: state.notes\n  };\n};\n\nexport default connect(mapStateToProps)(Favorites);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//Redux\nimport store from \"./Redux/store\";\nimport { Provider } from \"react-redux\";\n//React-router-dom\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\n//Bootstrap\nimport \"bootstrap/dist/css/bootstrap.css\";\n//Components\nimport Notes from \"./Components/Notes/Notes\";\nimport Details from \"./Components/Details/Details\";\nimport Favorites from \"./Components/Favorites/Favorites\"\n//scss\nimport \"./Styles/Root.scss\";\n\nconst Root = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/notes\" component={Notes} />\n        <Route path=\"/details/:itemId\" component={Details} />\n        <Route path=\"/favorites\" component={Favorites} />\n        <Redirect from=\"/\" to=\"/notes\" />\n      </Switch>\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(Root, document.getElementById(\"root\"));\n"],"sourceRoot":""}